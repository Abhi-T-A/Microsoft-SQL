
Create Database  CaseStudy_1
use CaseStudy_1

select * from fact
select * from Location
select * from Product

--1)Display the number of states present in the LocationTable

select count( distinct state) from Location

--2) How many products are of regular type ?

select count(*) from Product where Type='Regular'

--3) How much spending has been done on marketing of product id 1

select sum(Marketing) from fact where ProductId=1



--4) What is the minimum sales of a product ?

select min(Sales) from fact


--5) Display max Cost of Good Sold(COGS).

select max(COGS) from fact


--6) Display the Details of the product where product type is coffee

SELECT * FROM Product WHERE Product_Type='COFFEE'


--7) Display the details where total_expenses is greater than 40.

SELECT * FROM fact WHERE Total_Expenses>40 


--8) What is the average sales in Area_Code 719 ?
SELECT AVG(Sales)  FROM fact WHERE Area_Code=719


--9) Find out the total profit generated by Colorado state.
--Fact, Location
SELECT STATE,SUM(Profit) FROM FACT AS F
INNER JOIN LOCATION AS L
ON F.Area_Code=L.Area_Code
GROUP BY STATE
HAVING STATE = 'COLORADO'

--10) Display the average inventory for each product id.
SELECT ProductId, AVG(Inventory) FROM FACT
GROUP BY ProductId ORDER BY ProductID


--11) Display state in a sequential order in a location table.
SELECT distinct state FROM Location ORDER BY state desc

--13) What is the total sales done on date 2010-01-01
select sum(sales) from fact where date=' 2010-01-01'

--14) Display the average total expense of each product id on individual date
select ProductId,Date,avg(Total_Expenses) avg_te from fact
group by date,ProductId
order by date,ProductId

/*15) Display the table with the following attributes such as
Date, productid, product_type, product, Sales, profit, state, area_code */
Select Date, P.productid, product_type, product, Sales, profit, state, L.area_code from 
Fact F
join
Product P
on F.ProductId = P.ProductId
join
Location L
on F.Area_Code = L.Area_Code

-- 16) Display the rank without any gap to show the Sales wise rank.
select sales, DENSE_RANK() OVER(ORDER BY SALES DESC) AS RANK
from fact
select sales, RANK() OVER(ORDER BY SALES DESC) AS RANK
from fact

--17) Find the State wise Profit and Sales.
-- Location & Fact
SELECT STATE,SUM(Profit) AS PROFIT,SUM(SALES) SALES FROM FACT AS F
JOIN LOCATION AS L
ON F.Area_Code=L.Area_Code
GROUP BY State

--18) Find the State wise Profit and Sales along with the Product Name.
SELECT STATE,Product,SUM(Profit) AS PROFIT,SUM(SALES) SALES FROM FACT AS F
JOIN LOCATION AS L
ON F.Area_Code=L.Area_Code
JOIN Product AS P
ON F.ProductId=P.ProductId
GROUP BY State,Product

--19) If there is an increase in sales of 5%. Calculate the increased sales.
SALES =X
X= X + X*0.05= X(1+0.05)=X*1.05 =SALES*1.05
SELECT SALES,(SALES*1.05) AS INC_SALES FROM FACT

--20) Find the maximum profit along with the Product id and Product Type.
SELECT F.ProductId,Product_Type FROM FACT AS F
JOIN Product AS P
ON F.ProductId=P.ProductId
WHERE Profit=--778
(SELECT MAX(Profit) FROM FACT)

--21) Create a Stored Procedure to fetch the result according to the product type from Product.
Create Procedure Prod_type (@val varchar(25))
as
Select * from Product where Product_Type=@val
--Calling Procedure
Exec Prod_type 'COFFEE'

--22) Write a query by creating a condition in which if the 
--total expenses is less than 60 then it is profit or else loss.
SELECT Total_Expenses,IIF(Total_Expenses<60,'PROFIT','LOSS') FROM FACT